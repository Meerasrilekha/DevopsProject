name: CI_CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4. Run simple test
      - name: Run simple test
        run: |
          npm install -g http-server
          # Start server in the background on port 8080
          http-server . -p 8080 &
          SERVER_PID=$!
          sleep 5
          # Check if server responds
          curl -f http://localhost:8080 || { echo "Server test failed"; kill $SERVER_PID; exit 1; }
          echo "Server test passed"
          kill $SERVER_PID

      # 5. Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 6. Login to Azure Container Registry (ACR)
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          registry: devopsmsb123.azurecr.io

      # 7. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: devopsmsb123.azurecr.io/devopsproject:latest

      # 8. Set AKS context
      - name: Set AKS context
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: devops-aks
          resource-group: DevopsProject

      # 9. Deploy to AKS
      - name: Deploy to AKS
        uses: azure/k8s-deploy@v3
        with:
          manifests: |
            manifests/deployment.yaml
            manifests/service.yaml
          add-github-actions-labels: false

      # 10. Print service info
      - name: Show deployed service
        run: kubectl get svc myapp-service
